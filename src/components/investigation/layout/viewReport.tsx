import { useState } from 'react';
import { Col, Grid, Row, Typography } from 'antd';
import { pxToRem } from 'vs-design-components/src/utils/sharedUtils';

import { TReportData } from '@/types/safeReportTypes';

import ColorfulPill from '@/components/common/colorfulPill/colorfulPill';

import {
  FACILITY_CHECKLIST_EVENT_DISPLAY_NAMES,
  SAFE_NEAR_MISS_TYPES_LABELS,
  SAFE_REPORT_EVENT_LOCATION_LABEL,
  SAFE_SEVERITY_TYPES,
  SAFE_SEVERITY_TYPES_LABELS
} from '@/utils/constants';
import {
  DATE_FORMATS,
  getFormattedDateNoTimeZone
} from '@/utils/dateFormatsTimezones';

import { useInvestigateReportStyle } from './useInvestigateReportStyle';
import { useViewReportStyle } from './useViewReportStyle';

const { useBreakpoint } = Grid;

interface props {
  reportData: TReportData;
}

type TSbarrViewMore = {
  action: boolean;
  situation: boolean;
  background: boolean;
  result: boolean;
  recommendation: boolean;
  detail: boolean;
};

const ViewReport: React.FC<props> = ({ reportData }) => {
  const {
    viewReportContainer,
    reportTitleClass,
    viewReportSubHeading,
    viewReportSecion,
    viewReportInfoText,
    sbarrBox,
    sbarrLabel,
    sbarrText,
    sbarrTextExpanded,
    viewMoreButton
  } = useViewReportStyle();
  const size = useBreakpoint();

  const { ownerPill } = useInvestigateReportStyle();

  const [viewMore, setViewMore] = useState<TSbarrViewMore>({
    action: false,
    situation: false,
    background: false,
    result: false,
    recommendation: false,
    detail: false
  });

  const onClickView = (key: string) => {
    setViewMore((x: any) => ({
      ...x,
      [key]: !x[key]
    }));
  };

  return (
    <Row className={viewReportContainer}>
      <Col span={24}>
        <Row className={reportTitleClass}>{reportData.description}</Row>

        <Row
          align={'top'}
          justify={'space-between'}
          className={viewReportSecion}
          style={{ gap: size.xs ? pxToRem(10) : undefined }}
        >
          <Col span={size.xs ? 10 : 8}>
            <div className={viewReportSubHeading}>Generated By</div>
            <div className={viewReportInfoText}>
              {reportData.isAnonymous
                ? 'Anonymous'
                : `${reportData.admin.lastName}, ${reportData.admin.firstName}`}
            </div>
          </Col>
          <Col span={size.xs ? 10 : 8}>
            <div className={viewReportSubHeading}>Date and Time</div>
            <div className={viewReportInfoText}>
              {getFormattedDateNoTimeZone({
                date: reportData.safeReport.date,
                format: DATE_FORMATS.MDY
              })}{' '}
              {reportData.safeReport.time &&
                `- ${getFormattedDateNoTimeZone({
                  date: reportData.safeReport.time,
                  format: DATE_FORMATS.TIME,
                  parseFrom: 'hh:mm:ss'
                })}`}
            </div>
          </Col>
          <Col span={size.xs ? 10 : 8}>
            <div className={viewReportSubHeading}>Facility</div>
            <div className={viewReportInfoText}>
              {reportData.facility.facilityName}
            </div>
          </Col>
        </Row>
        {reportData.status === 'CLOSED' && (
          <Row className={viewReportSecion}>
            <Col>
              <div className={viewReportSubHeading}>Reviewed By</div>
              <div className={viewReportInfoText}>
                <ColorfulPill
                  text={`${reportData.closedByAdmin.lastName}, ${reportData.closedByAdmin.firstName}`}
                  className={ownerPill}
                />
              </div>
            </Col>
          </Row>
        )}

        <Row className={viewReportSecion}>
          <Col span={24}>
            <Typography.Text className={viewReportSubHeading}>
              Event Location
            </Typography.Text>
            <div
              style={{
                marginBlockStart: pxToRem(16),
                display: 'flex',
                rowGap: pxToRem(10),
                flexWrap: 'wrap'
              }}
            >
              {reportData.safeReportEventLocation.map(({ location }) => (
                <ColorfulPill
                  key={location}
                  text={`${SAFE_REPORT_EVENT_LOCATION_LABEL[location]}`}
                />
              ))}
            </div>

            {reportData.safeReportEventLocation.find(
              el => el.location === 'HOUSING_UNIT'
            )?.description && (
              <div>
                <span className={sbarrLabel}>Housing Unit</span>
                <div
                  className={sbarrBox}
                  style={{
                    width: size.xs ? '70%' : '50%',
                    minHeight: pxToRem(20),
                    maxHeight: pxToRem(60)
                  }}
                >
                  <div style={{ overflowY: 'auto', maxHeight: pxToRem(60) }}>
                    {
                      reportData.safeReportEventLocation.find(
                        el => el.location === 'HOUSING_UNIT'
                      )?.description
                    }
                  </div>
                </div>
              </div>
            )}

            {reportData.safeReportEventLocation.find(
              el => el.location === 'MEDICATION_CART'
            )?.description && (
              <div>
                <span className={sbarrLabel}>Medication Cart</span>
                <div
                  className={sbarrBox}
                  style={{
                    width: size.xs ? '70%' : '50%',
                    minHeight: pxToRem(20),
                    maxHeight: pxToRem(60)
                  }}
                >
                  <div style={{ overflowY: 'auto', maxHeight: pxToRem(60) }}>
                    {
                      reportData.safeReportEventLocation.find(
                        el => el.location === 'MEDICATION_CART'
                      )?.description
                    }
                  </div>
                </div>
              </div>
            )}

            {reportData.safeReportEventLocation.find(
              el => el.location === 'OTHER'
            )?.description && (
              <div>
                <span className={sbarrLabel}>Other</span>
                <div
                  className={sbarrBox}
                  style={{
                    width: size.xs ? '70%' : '50%',
                    minHeight: pxToRem(20),
                    maxHeight: pxToRem(60)
                  }}
                >
                  <div style={{ overflowY: 'auto', maxHeight: pxToRem(60) }}>
                    {
                      reportData.safeReportEventLocation.find(
                        el => el.location === 'OTHER'
                      )?.description
                    }
                  </div>
                </div>
              </div>
            )}
          </Col>
        </Row>
        <Row className={viewReportSecion}>
          <Col span={24}>
            <Typography.Text className={viewReportSubHeading}>
              Event Type
            </Typography.Text>
            <div
              style={{
                marginBlockStart: pxToRem(16),
                display: 'flex',
                rowGap: pxToRem(10),
                flexWrap: 'wrap'
              }}
            >
              {reportData.type === 'ISSUE' ? (
                <ColorfulPill text="Other" />
              ) : (
                reportData.safeFacilityChecklist.map(event => (
                  <ColorfulPill
                    key={event}
                    text={`${FACILITY_CHECKLIST_EVENT_DISPLAY_NAMES[event]}`}
                  />
                ))
              )}
            </div>
          </Col>
        </Row>

        {reportData.type === 'ISSUE' ? (
          <Row>
            <Col span={24}>
              <Typography.Text className={viewReportSubHeading}>
                Details of Issue
              </Typography.Text>
              <div>
                <span className={sbarrLabel}>Issue Details</span>
                <div className={sbarrBox}>
                  <div
                    className={viewMore.detail ? sbarrTextExpanded : sbarrText}
                  >
                    {reportData.safeReport?.detail}
                  </div>
                  {reportData.safeReport?.detail?.length >= 250 && (
                    <div
                      className={viewMoreButton}
                      onClick={() => onClickView('detail')}
                    >
                      {!viewMore?.detail ? 'View More' : 'View Less'}
                    </div>
                  )}
                </div>
              </div>
            </Col>
          </Row>
        ) : (
          <Row className={viewReportSecion}>
            <Col span={24}>
              <Typography.Text className={viewReportSubHeading}>
                Event Severity
              </Typography.Text>
              <div
                style={{
                  marginBlockStart: pxToRem(16),
                  display: 'flex',
                  rowGap: pxToRem(10),
                  flexWrap: 'wrap'
                }}
              >
                <ColorfulPill
                  key={reportData.safeReport.severityType}
                  text={`${SAFE_SEVERITY_TYPES_LABELS[reportData.safeReport.severityType]}`}
                />
                {reportData.safeReport.severityType ===
                SAFE_SEVERITY_TYPES.NEAR_MISS ? (
                  <ColorfulPill
                    key={reportData.safeReport.nearMissType}
                    text={`${SAFE_NEAR_MISS_TYPES_LABELS[reportData.safeReport.nearMissType]}`}
                  />
                ) : (
                  <ColorfulPill
                    key={reportData.safeReport.nearMissType}
                    text={`Patient Harmed (${reportData.safeReport.isPatientHarmed ? 'Yes' : 'No'})`}
                  />
                )}
              </div>
            </Col>
          </Row>
        )}

        {reportData.type !== 'ISSUE' && (
          <Row className={viewReportSecion}>
            <Col span={24}>
              <div className={viewReportSubHeading}>SBARR</div>
              <div>
                <span className={sbarrLabel}>Situation</span>
                <div className={sbarrBox}>
                  <div
                    className={
                      viewMore?.situation ? sbarrTextExpanded : sbarrText
                    }
                  >
                    {reportData.safeReport?.sbarrSituation}
                  </div>
                  {reportData.safeReport?.sbarrSituation?.length >= 250 && (
                    <div
                      className={viewMoreButton}
                      onClick={() => onClickView('situation')}
                    >
                      {!viewMore?.situation ? 'View More' : 'View Less'}
                    </div>
                  )}
                </div>
              </div>

              <div>
                <span className={sbarrLabel}>Backround</span>

                <div className={sbarrBox}>
                  <div
                    className={
                      viewMore?.background ? sbarrTextExpanded : sbarrText
                    }
                  >
                    {reportData.safeReport?.sbarrBackground}
                  </div>
                  {reportData.safeReport?.sbarrBackground?.length >= 250 && (
                    <div
                      className={viewMoreButton}
                      onClick={() => onClickView('background')}
                    >
                      {!viewMore?.background ? 'View More' : 'View Less'}
                    </div>
                  )}
                </div>
              </div>

              <div>
                <span className={sbarrLabel}>Action</span>

                <div className={sbarrBox}>
                  <div
                    className={viewMore.action ? sbarrTextExpanded : sbarrText}
                  >
                    {reportData.safeReport?.sbarrAction}
                  </div>
                  {reportData.safeReport?.sbarrAction?.length >= 250 && (
                    <div
                      className={viewMoreButton}
                      onClick={() => onClickView('action')}
                    >
                      {!viewMore.action ? 'View More' : 'View Less'}
                    </div>
                  )}
                </div>
              </div>
              <div>
                <span className={sbarrLabel}>Recommendations</span>

                <div className={sbarrBox}>
                  <div
                    className={
                      viewMore.recommendation ? sbarrTextExpanded : sbarrText
                    }
                  >
                    {reportData.safeReport?.sbarrRecommendation}
                  </div>
                  {reportData.safeReport?.sbarrRecommendation?.length >=
                    250 && (
                    <div
                      className={viewMoreButton}
                      onClick={() => onClickView('recommendation')}
                    >
                      {!viewMore.recommendation ? 'View More' : 'View Less'}
                    </div>
                  )}
                </div>
              </div>

              <div>
                <span className={sbarrLabel}>Results</span>

                <div className={sbarrBox}>
                  <div
                    className={viewMore.result ? sbarrTextExpanded : sbarrText}
                  >
                    {reportData.safeReport?.sbarrResult}
                  </div>
                  {reportData.safeReport?.sbarrResult?.length >= 250 && (
                    <div
                      className={viewMoreButton}
                      onClick={() => onClickView('result')}
                    >
                      {!viewMore.result ? 'View More' : 'View Less'}
                    </div>
                  )}
                </div>
              </div>
            </Col>
          </Row>
        )}
      </Col>
    </Row>
  );
};

export default ViewReport;
